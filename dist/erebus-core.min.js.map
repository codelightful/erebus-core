{"version":3,"file":"erebus-core.min.js","sources":["../src/utils.mjs","../src/random.mjs","../src/events.mjs","../src/handler.mjs","../src/element.mjs","../src/erebus.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif(typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction onReady(callback) {\r\n\tif (document.readyState !== 'loading') {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default { onReady };","/** Invokes a function with exception management */\r\nfunction trigger(fnc, ...params) {\r\n\tif(fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if(typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch(ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default { trigger };","/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} Element to remove the childs from it\r\n */\r\nfunction removeAllChild(element) {\r\n\tif (!element || !(element instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (element.firstChild) {\r\n\t\telement.removeChild(element.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif(clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns \r\n */\r\nfunction getElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source === 'body') {\r\n\t\t\tnativeSource = document.body;\r\n\t\t} else if (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_element_id[' + source + ']');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelectorAll(source);\r\n\t\t\tif (nativeSource.length === 0) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_selector[' + source + ']');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElements;\r\n\t#hidden;\r\n\r\n\tconstructor(element) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (element instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElements = [];\r\n\t\t\tthis.#wrappedElements.push(element);\r\n\t\t} else if (element instanceof NodeList) {\r\n\t\t\tthis.#wrappedElements = Array.from(element);\r\n\t\t} else if (Array.isArray(element)) {\r\n\t\t\tthis.#wrappedElements = element;\r\n\t\t} else {\r\n\t\t\tthrow Error('erebus.element.unknown_type[' + typeof (element) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates each wrapped element and invokes a handler that receives each separate instane\r\n\t * @param {function} handler Function that receives each separated HTMLElement wrapped, the function\r\n\t * \t\t\treceives the instance and an integer with the index of the element\r\n\t */\r\n\teach(handler) {\r\n\t\tfor (let wdx = 0; wdx < this.#wrappedElements.length; wdx++) {\r\n\t\t\tconst result = handler(this.#wrappedElements[wdx], wdx);\r\n\t\t\tif (result === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped elements\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.each(element => {\r\n\t\t\telement.innerHTML = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped elements.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {*} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.each((element, index) => {\r\n\t\t\tif (typeof (value) === 'string') {\r\n\t\t\t\telement.innerHTML = value;\r\n\t\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t}\r\n\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvalue.setParentNode(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.clone().setParentNode(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = getElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tparent.appendChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or \r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t * @returns \r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(content);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tif (value instanceof HTMLElement) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\t\tvalue.each(innerElement => {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\telement.appendChild(innerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement.appendChild(cloneHTMLElement(innerElement));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a listener to the current instance and its wrapped elements */\r\n\taddEventListener(eventName, listener) {\r\n\t\tif(!eventName) {\r\n\t\t\tthrow Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if(typeof(listener) === 'function') {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\tif (typeof (element.addEventListener) === 'function') {\r\n\t\t\t\t\telement.addEventListener(eventName, listener, false);\r\n\t\t\t\t} else if (typeof (element.attachEvent) === 'function') {\r\n\t\t\t\t\telement.attachEvent('on' + eventName, listener);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif(this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif(computedDisplay && computedDisplay !== 'none') {\r\n\t\t\t\telement.originalDisplay = computedDisplay;\r\n\t\t\t}\r\n\t\t\telement.style.display = 'none';\r\n\t\t});\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tconsole.log('computedDisplay=' + computedDisplay);\r\n\t\t\tif(!computedDisplay || computedDisplay === 'none') {\r\n\t\t\t\tif(element.originalDisplay) {\r\n\t\t\t\t\telement.style.display = element.originalDisplay;\r\n\t\t\t\t\tdelete element.originalDisplay;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style.display = 'block';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = [];\r\n\t\tthis.each(element => {\r\n\t\t\tclonedWrapped.push(cloneHTMLElement(element));\r\n\t\t});\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n}\r\n\r\nexport default getElement;","'use strict';\r\nconsole.log('Erebus Core v0.0.3');\r\nimport utils from './utils.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport element from './element.mjs';\r\n\r\nexport default { utils, random, events, handler, element };\r\n"],"names":["$module","tinyId","Math","random","toString","substring","isPromise","value","Promise","_typeof","then","trim","replace","shortId","guid","onReady","callback","document","readyState","addEventListener","attachEvent","trigger","fnc","params","resolve","reject","call","ex","console","error","parseHTML","content","holder","createElement","innerHTML","childNodes","removeAllChild","element","HTMLElement","firstChild","removeChild","cloneHTMLElement","sourceElement","clonedElement","cloneNode","nodeType","removeAttribute","getElement","source","ErebusElement","nativeSource","body","startsWith","endsWith","getElementById","Error","querySelectorAll","length","push","NodeList","Array","from","isArray","handler","wdx","_classPrivateFieldGet","each","index","appendChild","setParentNode","clone","this","parent","parentNode","parsedContent","idx","innerElement","eventName","listener","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","log","clonedWrapped","utils","events"],"mappings":"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"}