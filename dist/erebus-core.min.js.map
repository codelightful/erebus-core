{"version":3,"file":"erebus-core.min.js","sources":["../src/utils.mjs","../src/random.mjs","../src/events.mjs","../src/handler.mjs","../src/element.mjs","../src/http.mjs","../src/i18n.mjs","../src/erebus.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif(typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction onReady(callback) {\r\n\tif (document.readyState !== 'loading') {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default { onReady };","/** Invokes a function with exception management */\r\nfunction trigger(fnc, ...params) {\r\n\tif(fnc === null || fnc === undefined) {\r\n\t\treturn;\r\n\t} else if(typeof(fnc) !== 'function') {\r\n\t\tthrow new Error('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\ttry {\r\n\t\treturn fnc.call(null, ...params);\r\n\t} catch(ex) {\r\n\t\tthrow new Error('erebus.handlers.trigger.function_error', ex);\r\n\t}\r\n}\r\n\r\n/** Invokes a function with exception management */\r\nfunction triggerAsPromise(fnc, ...params) {\r\n\tif(fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if(typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger_promise_function.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch(ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger_promise_function.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default { trigger, triggerAsPromise };","import utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} Element to remove the childs from it\r\n */\r\nfunction removeAllChild(element) {\r\n\tif (!element || !(element instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (element.firstChild) {\r\n\t\telement.removeChild(element.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif (clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns \r\n */\r\nfunction getElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tif (!$scope.body) {\r\n\t\t\t$scope.body = new ErebusElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.body;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_element_id[' + source + ']');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelectorAll(source);\r\n\t\t\tif (nativeSource.length === 0) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_selector[' + source + ']');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElements;\r\n\t#hidden;\r\n\r\n\tconstructor(element) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (element instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElements = [];\r\n\t\t\tthis.#wrappedElements.push(element);\r\n\t\t} else if (element instanceof NodeList) {\r\n\t\t\tthis.#wrappedElements = Array.from(element);\r\n\t\t} else if (Array.isArray(element)) {\r\n\t\t\tthis.#wrappedElements = element;\r\n\t\t} else {\r\n\t\t\tthrow Error('erebus.element.unknown_type[' + typeof (element) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates each wrapped element and invokes a handler that receives each separate instane\r\n\t * @param {function} handler Function that receives each separated HTMLElement wrapped, the function\r\n\t * \t\t\treceives the instance and an integer with the index of the element\r\n\t */\r\n\teach(handler) {\r\n\t\tfor (let wdx = 0; wdx < this.#wrappedElements.length; wdx++) {\r\n\t\t\tconst result = handler(this.#wrappedElements[wdx], wdx);\r\n\t\t\tif (result === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped elements\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.each(element => {\r\n\t\t\telement.innerHTML = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Remove all the content from the current instance */\r\n\tclear() {\r\n\t\tthis.each((element) => {\r\n\t\t\telement.innerHTML = '';\r\n\t\t\tremoveAllChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped elements.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {*} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.each((element, index) => {\r\n\t\t\tif (typeof (value) === 'string') {\r\n\t\t\t\telement.innerHTML = value;\r\n\t\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t}\r\n\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvalue.setParentNode(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.clone().setParentNode(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = getElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tparent.appendChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or \r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t * @returns \r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(content);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tif (value instanceof HTMLElement) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\t\tvalue.each(innerElement => {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\telement.appendChild(innerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement.appendChild(cloneHTMLElement(innerElement));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\taddEventListener(eventName, listener, options) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if (typeof (listener) === 'function') {\r\n\t\t\tif (options === undefined) {\r\n\t\t\t\toptions = { capture: false };\r\n\t\t\t}\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.addEventListener(eventName, listener, options);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a single execution listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonce(eventName, listener) {\r\n\t\treturn this.addEventListener(eventName, listener, { capture: false, once: true });\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif (this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (computedDisplay && computedDisplay !== 'none') {\r\n\t\t\t\telement.originalDisplay = computedDisplay;\r\n\t\t\t}\r\n\t\t\telement.style.display = 'none';\r\n\t\t});\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.#hidden = false;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (!computedDisplay || computedDisplay === 'none') {\r\n\t\t\t\tif (element.originalDisplay) {\r\n\t\t\t\t\telement.style.display = element.originalDisplay;\r\n\t\t\t\t\tdelete element.originalDisplay;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style.display = 'block';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = [];\r\n\t\tthis.each(element => {\r\n\t\t\tclonedWrapped.push(cloneHTMLElement(element));\r\n\t\t});\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\taddClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!element.className) {\r\n\t\t\t\t\telement.className = className;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\t\tif (!regex.test(element.className)) {\r\n\t\t\t\t\t\telement.className += ' ' + className;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\tremoveClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tif (!element.className) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (regex.test(element.className)) {\r\n\t\t\t\t\telement.className = element.className.replace(regex, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Set the CSS class name for the HTMLElements wrapped by the current instance */\r\n\tset className(value) {\r\n\t\tvalue = utils.trim(value);\r\n\t\tthis.each(element => {\r\n\t\t\telement.className = value;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default getElement;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n/** Internal scoped variable holders */\r\nconst $scope = {};\r\n/** Holds all the estandard parsers defined for the library */\r\n$scope.parsers = {};\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t}\r\n\ttry {\r\n\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t} catch (ex) {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t} catch (ex) {\r\n\t\t\tthrow Error('erebus.http.xmlhttp_error');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif (rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor (let idx = 0; idx < rawHeaders.length; idx++) {\r\n\t\t\tif (!rawHeaders[idx]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\tconst headerName = utils.trim(parts[0]).toLowerCase();\r\n\t\t\tconst headerValue = utils.trim(parts[1]);\r\n\t\t\tif(headerName && headerValue) {\r\n\t\t\t\theaders[headerName] = headerValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal utility method to set request headers\r\n * @param {*} request XHR object representing the request\r\n * @param {*} headers Object with the headers to set. Each header is an attribute in the object\r\n */\r\nfunction setRequestHeaders(request, headers) {\r\n\tif (headers) {\r\n\t\tfor (var headerName in headers) {\r\n\t\t\trequest.setRequestHeader(headerName, headers[headerName]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Parses a response as a JSON */\r\n$scope.parsers['json'] = function (response) {\r\n\ttry {\r\n\t\treturn JSON.parse(response);\r\n\t} catch (ex) {\r\n\t\tconst err = new Error('erebus.http.json_parse_error');\r\n\t\terr.cause = ex;\r\n\t\terr.response = response;\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\n/** Internal method to obtain the proper parser according to the content type or null if no transformations are required */\r\nfunction getResponseParser(headers) {\r\n\tif (headers && headers['content-type'] === 'application/json') {\r\n\t\treturn $scope.parsers['json'];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * \r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\nfunction executeRequest(method, url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('erebus.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!method) {\r\n\t\tmethod = 'GET';\r\n\t}\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tconst request = createXmlHttp();\r\n\t\trequest.onreadystatechange = function () {\r\n\t\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\t\tif (request.status !== 200) {\r\n\t\t\t\t\tconst err = new Error('http_error[' + request.status + ']');\r\n\t\t\t\t\terr.status = request.status;\r\n\t\t\t\t\terr.response = request.responseText;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tconst headers = getResponseHeaders(request);\r\n\t\t\t\t\tconst parser = getResponseParser(headers);\r\n\t\t\t\t\tif (parser) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = parser(response);\r\n\t\t\t\t\t\t} catch(ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof (options.interceptor) === 'function') {\r\n\t\t\t\t\t\tconst result = options.interceptor(response, headers);\r\n\t\t\t\t\t\tif(result !== undefined) {\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.open(method, url, options.async !== false);\r\n\t\tsetRequestHeaders(request, options.headers);\r\n\t\tif (method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Executes a HTTP GET request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.get = function (url, options) {\r\n\treturn executeRequest('GET', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP POST request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.post = function (url, options) {\r\n\treturn executeRequest('POST', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP PUT request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.put = function (url, options) {\r\n\treturn executeRequest('PUT', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP DELETE request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.delete = function (url, options) {\r\n\treturn executeRequest('DELETE', url, options);\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\t/*\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `erebus.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t\t*/\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\nexport default $module;","import handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n// Holds the language defined for the application\r\n$scope.language = null;\r\n// Holds all the resources defined\r\n$scope.resources = {};\r\n\r\n/** Allows to obtain the locale code in the client */\r\nfunction getLocale() {\r\n\tif (navigator.language) {\r\n\t\treturn navigator.language;\r\n\t} else if (navigator.browserLanguage) {\r\n\t\treturn navigator.browserLanguage;\r\n\t}\r\n\treturn 'en-US';\r\n}\r\n\r\n/** Obtains the default language defined for the current system */\r\nfunction getSystemLanguage() {\r\n\treturn getLocale().substr(0, 2);\r\n}\r\n\r\n/**\r\n * Allows to set the language used by the application\r\n * @param {string} value Two letter ISO language code\r\n */\r\nfunction setLanguage(value) {\r\n\t$scope.language = value;\r\n}\r\n\r\n/** Obtains the language defined for the application */\r\nfunction getLanguage() {\r\n\tif (!$scope.language) {\r\n\t\treturn getSystemLanguage();\r\n\t}\r\n\treturn $scope.language;\r\n}\r\n\r\n/**\r\n * Sets the resource bundle for a specific language\r\n * @param {*} resource Object with the labels and values, function providing the object with the label and values\r\n * \t\t\t\tor promise to be fulfilled with the label and values\r\n * @param {*} langCode String with the language code or omit to use the system default language\r\n */\r\nfunction setResourceBundle(resource, langCode) {\r\n\tif (!resource) {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (!langCode) {\r\n\t\tlangCode = getLanguage();\r\n\t}\r\n\tif (typeof (resource) === 'function') {\r\n\t\tconst result = handler.trigger(resource);\r\n\t\treturn setResourceBundle(result, langCode);\r\n\t} else if (utils.isPromise(resource)) {\r\n\t\treturn resource.then(function (result) {\r\n\t\t\treturn setResourceBundle(result, langCode);\r\n\t\t}).catch(function (ex) {\r\n\t\t\tconst err = Error('erebus.i18n.promise_resource_error');\r\n\t\t\terr.cause = ex;\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t}\r\n\tconst target = $scope.resources[langCode];\r\n\tif(!target) {\r\n\t\t$scope.resources[langCode] = resource;\r\n\t} else {\r\n\t\tObject.assign(target, resource);\r\n\t}\r\n\treturn Promise.resolve();\r\n}\r\n\r\n/**\r\n * Obtains an i18n label for the language defined in the syste,\r\n * @param {*} key Key to obtain the value for it\r\n * @param {*} defaultValue Default value in case that no language resource has been set\r\n */\r\nfunction getLabel(key, defaultValue) {\r\n\tconst langCode = getLanguage();\r\n\tconst resources = $scope.resources[langCode];\r\n\tif (!resources || !resources[key]) {\r\n\t\treturn defaultValue ?? key;\r\n\t}\r\n\treturn resources[key];\r\n}\r\n\r\nexport default { getLocale, getSystemLanguage, setLanguage, getLanguage, setResourceBundle, getLabel };\r\n","'use strict';\r\nconsole.log('Erebus Core v0.0.10');\r\nimport utils from './utils.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport element from './element.mjs';\r\nimport http from './http.mjs';\r\nimport i18n from './i18n.mjs';\r\n\r\nexport default { utils, random, events, handler, element, http, i18n };\r\n"],"names":["$module","tinyId","Math","random","toString","substring","isPromise","value","Promise","_typeof","then","trim","replace","shortId","guid","onReady","callback","document","readyState","addEventListener","attachEvent","trigger","fnc","Error","params","call","ex","triggerAsPromise","resolve","reject","console","error","$scope","parseHTML","content","holder","createElement","innerHTML","childNodes","removeAllChild","element","HTMLElement","firstChild","removeChild","cloneHTMLElement","sourceElement","clonedElement","cloneNode","nodeType","removeAttribute","getElement","source","ErebusElement","body","nativeSource","startsWith","endsWith","getElementById","querySelectorAll","length","push","NodeList","Array","from","isArray","handler","wdx","_classPrivateFieldGet","each","this","index","appendChild","setParentNode","clone","parent","parentNode","parsedContent","idx","innerElement","eventName","listener","options","undefined","capture","once","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","clonedWrapped","classes","cdx","className","utils","RegExp","test","regex","executeRequest","method","url","request","window","XMLHttpRequest","ActiveXObject","createXmlHttp","onreadystatechange","status","err","response","responseText","headers","rawHeaders","getAllResponseHeaders","split","parts","headerName","toLowerCase","headerValue","getResponseHeaders","parser","parsers","getResponseParser","interceptor","result","open","async","setRequestHeader","setRequestHeaders","data","send","JSON","parse","cause","get","post","put","loadScript","src","type","onerror","onload","head","getLocale","navigator","language","browserLanguage","getSystemLanguage","substr","getLanguage","resources","setLanguage","setResourceBundle","resource","langCode","target","Object","assign","getLabel","key","defaultValue","log","events","http","i18n"],"mappings":"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"}