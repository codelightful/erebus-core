{"version":3,"file":"erebus-core.min.js","sources":["../src/utils.mjs","../src/cookies.mjs","../src/random.mjs","../src/events.mjs","../src/handler.mjs","../src/http.mjs","../src/element.mjs","../src/i18n.mjs","../src/router.mjs","../src/erebus.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets a specific cookie\r\n * @param name Name of the cookie to set\r\n * @param value Value to set\r\n * @param timespan Timspan to maintain the cookie in seconds\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (!name) {\r\n\t\tthrow Error('erebus.cookies.set.null_cookie_name');\r\n\t}\r\n\tif (typeof (timespan) !== 'number') {\r\n\t\ttimespan = 3600;\r\n\t}\r\n\tconst expireDate = new Date();\r\n\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\tvar cookie = utils.trim(name) + '=' + value + '; expires=' + expireDate.toGMTString() + '; path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (!name) {\r\n\t\treturn null;\r\n\t}\r\n\tvar cookiestring = RegExp(name + '=[^;]+').exec(document.cookie);\r\n\tif (cookiestring) {\r\n\t\treturn decodeURIComponent(cookiestring.toString().replace(/^[^=]+./, ''));\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","const $module = {};\r\n\r\n/**\r\n * Returns a promise fullfilled when the document has been loaded and parsed.\r\n * @returns Promise to be fulfilled once the document is ready\r\n */\r\n$module.documentReady = function() {\r\n\tif (document.readyState !== 'loading') {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (typeof (document.addEventListener) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', resolve, false);\r\n\t\t});\r\n\t}\r\n\tif (typeof (document.attachEvent) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tconsole.error('The current browser event management is not supported by the Erebus framework');\r\n\treturn Promise.reject('erebus.events.unsuported_browser');\r\n};\r\n\r\n/**\r\n * Internal method to assign an animation class to an element and invoke a callback when is completed\r\n * @param target Reference to the HTMLElement (or ErebusElement) to animate\r\n * @param animationClass String with the CSS animation name to apply\r\n */\r\n$module.animate = function(target, animationClass) {\r\n\tif (!target) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_target');\r\n\t} else if (!animationClass) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_animation');\r\n\t}\r\n\treturn new Promise(function(resolve) {\r\n\t\t// registers the event handler\r\n\t\ttarget.addEventListener('animationend', function () {\r\n\t\t\tresolve();\r\n\t\t}, { capture: false, once: true });\r\n\r\n\t\t// implements the animation\r\n\t\tif (target.className === '') {\r\n\t\t\ttarget.className = animationClass;\r\n\t\t} else if (target.classList) {\r\n\t\t\ttarget.classList.add(animationClass);\r\n\t\t} else if (typeof (target.addClass) === 'function') {\r\n\t\t\ttarget.addClass(animationClass);\r\n\t\t} else {\r\n\t\t\ttarget.className += ' ' + animationClass;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default $module;","/** Invokes a function with exception management */\r\nfunction trigger(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn;\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\tthrow new Error('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\ttry {\r\n\t\treturn fnc.call(null, ...params);\r\n\t} catch (ex) {\r\n\t\tthrow new Error('erebus.handlers.trigger.function_error', ex);\r\n\t}\r\n}\r\n\r\n/** Invokes a function with exception management */\r\nfunction triggerAsPromise(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger_promise_function.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger_promise_function.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default { trigger, triggerAsPromise };","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n/** Internal scoped variable holders */\r\nconst $scope = {};\r\n/** Holds all the estandard parsers defined for the library */\r\n$scope.parsers = {};\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t}\r\n\ttry {\r\n\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t} catch (ex) {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t} catch (ex) {\r\n\t\t\tthrow Error('erebus.http.xmlhttp_error');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif (rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor (let idx = 0; idx < rawHeaders.length; idx++) {\r\n\t\t\tif (!rawHeaders[idx]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\tconst headerName = utils.trim(parts[0]).toLowerCase();\r\n\t\t\tconst headerValue = utils.trim(parts[1]);\r\n\t\t\tif (headerName && headerValue) {\r\n\t\t\t\theaders[headerName] = headerValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal utility method to set request headers\r\n * @param {*} request XHR object representing the request\r\n * @param {*} headers Object with the headers to set. Each header is an attribute in the object\r\n */\r\nfunction setRequestHeaders(request, headers) {\r\n\tif (headers) {\r\n\t\tfor (var headerName in headers) {\r\n\t\t\trequest.setRequestHeader(headerName, headers[headerName]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Parses a response as a JSON */\r\n$scope.parsers['json'] = function (response) {\r\n\ttry {\r\n\t\treturn JSON.parse(response);\r\n\t} catch (ex) {\r\n\t\tconst err = new Error('erebus.http.json_parse_error');\r\n\t\terr.cause = ex;\r\n\t\terr.response = response;\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\n/** Internal method to obtain the proper parser according to the content type or null if no transformations are required */\r\nfunction getResponseParser(headers) {\r\n\tif (headers && headers['content-type'] === 'application/json') {\r\n\t\treturn $scope.parsers['json'];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n *\r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\nfunction executeRequest(method, url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('erebus.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!method) {\r\n\t\tmethod = 'GET';\r\n\t}\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tconst request = createXmlHttp();\r\n\t\trequest.onreadystatechange = function () {\r\n\t\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\t\tif (request.status !== 200) {\r\n\t\t\t\t\tconst err = new Error('http_error[' + request.status + ']');\r\n\t\t\t\t\terr.status = request.status;\r\n\t\t\t\t\terr.response = request.responseText;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tconst headers = getResponseHeaders(request);\r\n\t\t\t\t\tconst parser = getResponseParser(headers);\r\n\t\t\t\t\tif (parser) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = parser(response);\r\n\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof (options.interceptor) === 'function') {\r\n\t\t\t\t\t\tconst result = options.interceptor(response, headers);\r\n\t\t\t\t\t\tif (result !== undefined) {\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.open(method, url, options.async !== false);\r\n\t\tsetRequestHeaders(request, options.headers);\r\n\t\tif (method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Executes a HTTP GET request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.get = function (url, options) {\r\n\treturn executeRequest('GET', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP POST request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.post = function (url, options) {\r\n\treturn executeRequest('POST', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP PUT request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.put = function (url, options) {\r\n\treturn executeRequest('PUT', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP DELETE request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.delete = function (url, options) {\r\n\treturn executeRequest('DELETE', url, options);\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\t/*\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `erebus.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t\t*/\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\nimport http from './http.mjs';\r\nimport random from './random.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} Element to remove the childs from it\r\n */\r\nfunction removeAllChild(element) {\r\n\tif (!element || !(element instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (element.firstChild) {\r\n\t\telement.removeChild(element.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif (clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns\r\n */\r\nfunction createErebusElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tif (!$scope.body) {\r\n\t\t\t$scope.body = new ErebusElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.body;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow Error(`erebus.element.unknown_element_id[${source}]`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelectorAll(source);\r\n\t\t\tif (nativeSource.length === 0) {\r\n\t\t\t\tthrow Error(`erebus.element.unknown_selector[${source}]`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElements;\r\n\t#hidden;\r\n\r\n\tconstructor(element) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (element instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElements = [];\r\n\t\t\tthis.#wrappedElements.push(element);\r\n\t\t} else if (element instanceof NodeList) {\r\n\t\t\tthis.#wrappedElements = Array.from(element);\r\n\t\t} else if (Array.isArray(element)) {\r\n\t\t\tthis.#wrappedElements = element;\r\n\t\t} else {\r\n\t\t\tthrow Error('erebus.element.unknown_type[' + typeof (element) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates each wrapped element and invokes a handler that receives each separate instane\r\n\t * @param {function} handler Function that receives each separated HTMLElement wrapped, the function\r\n\t * \t\t\treceives the instance and an integer with the index of the element\r\n\t */\r\n\teach(handler) {\r\n\t\tfor (let wdx = 0; wdx < this.#wrappedElements.length; wdx++) {\r\n\t\t\tconst result = handler(this.#wrappedElements[wdx], wdx);\r\n\t\t\tif (result === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped elements\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.each(element => {\r\n\t\t\telement.innerHTML = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Remove all the content from the current instance */\r\n\tclear() {\r\n\t\tthis.each((element) => {\r\n\t\t\telement.innerHTML = '';\r\n\t\t\tremoveAllChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped elements.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {*} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.each((element, index) => {\r\n\t\t\tif (typeof (value) === 'string') {\r\n\t\t\t\telement.innerHTML = value;\r\n\t\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t}\r\n\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvalue.setParentNode(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.clone().setParentNode(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\tif (element.parentNode) {\r\n\t\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = createErebusElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tparent.appendChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or\r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(content);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tif (value instanceof HTMLElement) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\t\tvalue.each(innerElement => {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\telement.appendChild(innerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement.appendChild(cloneHTMLElement(innerElement));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\taddEventListener(eventName, listener, options) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if (typeof (listener) === 'function') {\r\n\t\t\tif (options === undefined) {\r\n\t\t\t\toptions = { capture: false };\r\n\t\t\t}\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.addEventListener(eventName, listener, options);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a single execution listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonce(eventName, listener) {\r\n\t\treturn this.addEventListener(eventName, listener, { capture: false, once: true });\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif (this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (computedDisplay && computedDisplay !== 'none') {\r\n\t\t\t\telement.originalDisplay = computedDisplay;\r\n\t\t\t}\r\n\t\t\telement.style.display = 'none';\r\n\t\t});\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.#hidden = false;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (!computedDisplay || computedDisplay === 'none') {\r\n\t\t\t\tif (element.originalDisplay) {\r\n\t\t\t\t\telement.style.display = element.originalDisplay;\r\n\t\t\t\t\tdelete element.originalDisplay;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style.display = 'block';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = [];\r\n\t\tthis.each(element => {\r\n\t\t\tclonedWrapped.push(cloneHTMLElement(element));\r\n\t\t});\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\taddClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!element.className) {\r\n\t\t\t\t\telement.className = className;\r\n\t\t\t\t} else if (element.classList) {\r\n\t\t\t\t\telement.classList.add(className);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\t\tif (!regex.test(element.className)) {\r\n\t\t\t\t\t\telement.className += ' ' + className;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\tremoveClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tif (!element.className) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (regex.test(element.className)) {\r\n\t\t\t\t\telement.className = element.className.replace(regex, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Set the CSS class name for the HTMLElements wrapped by the current instance */\r\n\tset className(value) {\r\n\t\tvalue = utils.trim(value);\r\n\t\tthis.each(element => {\r\n\t\t\telement.className = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Loads the content from an external resource inside the element represented by the current instance */\r\n\tload(url) {\r\n\t\treturn http.get(url).then((response) => {\r\n\t\t\tthis.content(response);\r\n\t\t}).catch((err) => {\r\n\t\t\tconst errorId = random.shortId();\r\n\t\t\tconsole.error(`erebus.element.load_error[${errorId}]`, err);\r\n\t\t\tthis.content(`<div>Error[${errorId}]</div>`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default createErebusElement;","import handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n// Holds the language defined for the application\r\n$scope.language = null;\r\n// Holds all the resources defined\r\n$scope.resources = {};\r\n\r\n/** Allows to obtain the locale code in the client */\r\nfunction getLocale() {\r\n\tif (navigator.language) {\r\n\t\treturn navigator.language;\r\n\t} else if (navigator.browserLanguage) {\r\n\t\treturn navigator.browserLanguage;\r\n\t}\r\n\treturn 'en-US';\r\n}\r\n\r\n/** Obtains the default language defined for the current system */\r\nfunction getSystemLanguage() {\r\n\treturn getLocale().substr(0, 2);\r\n}\r\n\r\n/**\r\n * Allows to set the language used by the application\r\n * @param {string} value Two letter ISO language code\r\n */\r\nfunction setLanguage(value) {\r\n\t$scope.language = value;\r\n}\r\n\r\n/** Obtains the language defined for the application */\r\nfunction getLanguage() {\r\n\tif (!$scope.language) {\r\n\t\treturn getSystemLanguage();\r\n\t}\r\n\treturn $scope.language;\r\n}\r\n\r\n/**\r\n * Sets the resource bundle for a specific language\r\n * @param {*} resource Object with the labels and values, function providing the object with the label and values\r\n * \t\t\t\tor promise to be fulfilled with the label and values\r\n * @param {*} langCode String with the language code or omit to use the system default language\r\n */\r\nfunction setResourceBundle(resource, langCode) {\r\n\tif (!resource) {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (!langCode) {\r\n\t\tlangCode = getLanguage();\r\n\t}\r\n\tif (typeof (resource) === 'function') {\r\n\t\tconst result = handler.trigger(resource);\r\n\t\treturn setResourceBundle(result, langCode);\r\n\t} else if (utils.isPromise(resource)) {\r\n\t\treturn resource.then(function (result) {\r\n\t\t\treturn setResourceBundle(result, langCode);\r\n\t\t}).catch(function (ex) {\r\n\t\t\tconst err = Error('erebus.i18n.promise_resource_error');\r\n\t\t\terr.cause = ex;\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t}\r\n\tconst target = $scope.resources[langCode];\r\n\tif (!target) {\r\n\t\t$scope.resources[langCode] = resource;\r\n\t} else {\r\n\t\tObject.assign(target, resource);\r\n\t}\r\n\treturn Promise.resolve();\r\n}\r\n\r\n/**\r\n * Obtains an i18n label for the language defined in the syste,\r\n * @param {*} key Key to obtain the value for it\r\n * @param {*} defaultValue Default value in case that no language resource has been set\r\n */\r\nfunction getLabel(key, defaultValue) {\r\n\tconst langCode = getLanguage();\r\n\tconst resources = $scope.resources[langCode];\r\n\tif (!resources || !resources[key]) {\r\n\t\treturn defaultValue ?? key;\r\n\t}\r\n\treturn resources[key];\r\n}\r\n\r\nexport default { getLocale, getSystemLanguage, setLanguage, getLanguage, setResourceBundle, getLabel };\r\n","/** Internal method to clear and stardardize a path */\r\nfunction clearPath(path) {\r\n\tif (path && typeof (path) === 'string') {\r\n\t\tif (path.startsWith('#')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t\tif (path.startsWith('/')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Compares a path against the routing path of a router\r\n * @param {string} routingPath Path of the router\r\n * @param {string} targetPath Path to compare\r\n * @returns Boolean value to determine if the route is equivalent to the path\r\n */\r\nfunction compareStringPaths(routingPath, targetPath) {\r\n\tif (routingPath === '*' || routingPath === targetPath) {\r\n\t\treturn true;\r\n\t}\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\t// ignore the parameter parts in the routing\r\n\t\tif (routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (routingParts[idx] !== '*' && routingParts[idx] !== targetParts[idx]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Uses the pattern defined by a routing path to extract the parameters from it\r\n * @param {string} routingPath String with the routing path\r\n * @param {string} targetPath String with the path to extract the parameters from it\r\n */\r\nfunction extractPathParameters(routingPath, targetPath) {\r\n\tconst parameters = {};\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\tif (!routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst paramName = routingParts[idx].substring(1);\r\n\t\tparameters[paramName] = targetParts[idx];\r\n\t}\r\n\treturn parameters;\r\n}\r\n\r\n/** Object to represent a single route */\r\nclass Route {\r\n\t/** Path served by this route */\r\n\t#path;\r\n\t/** Handler used to serve the route represented by this instance */\r\n\t#handler;\r\n\r\n\t/**\r\n\t * Creates a new route to serve a specific path\r\n\t * @param {string} path String with the path to serve\r\n\t * @param {function} handler Function to be invoked when this route is served\r\n\t */\r\n\tconstructor(path, handler) {\r\n\t\tthis.#path = clearPath(path);\r\n\t\tthis.#handler = handler;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the current route instance can match a specific path\r\n\t * @param {string} path Path to evaluate\r\n\t */\r\n\tmatch(path) {\r\n\t\tpath = clearPath(path);\r\n\t\tif (typeof (this.#path) === 'string') {\r\n\t\t\treturn compareStringPaths(this.#path, path);\r\n\t\t} else if (this.#path instanceof RegExp) {\r\n\t\t\treturn this.#path.test(path);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/** Handles a request using this route instance */\r\n\thandle(path) {\r\n\t\tif (!this.#handler) {\r\n\t\t\treturn Promise.reject(new Error(`erebus.route.no_handler[${path}]`));\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpath = clearPath(path);\r\n\t\t\ttry {\r\n\t\t\t\tvar parameters = extractPathParameters(this.#path, path);\r\n\t\t\t\tvar result = this.#handler(parameters);\r\n\t\t\t\tif (result instanceof Promise) {\r\n\t\t\t\t\tresult.then(resolve).catch(reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.error('erebus.route.handler_error', ex);\r\n\t\t\t\treject(ex);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method with the logic to identify the matching router from a list of possible routes\r\n * @param {array} routeList List containing the routes instances to evaluate\r\n * @param {string} path Path to match\r\n * @returns The matching route or null if no matching route is found\r\n */\r\nfunction getMatchingRouter(routeList, path) {\r\n\tfor (var rdx = 0; rdx < routeList.length; rdx++) {\r\n\t\tlet route = routeList[rdx];\r\n\t\tif (route.match(path)) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nclass RouterEngine {\r\n\t/** Hold the list of routes registered */\r\n\t#routes = [];\r\n\t/** Flag to determine if the routing engine has been started */\r\n\t#started = false;\r\n\t/** Reference to the default router registered */\r\n\t#defaultRouter;\r\n\t/** Reference to the error handler */\r\n\t#onError;\r\n\r\n\t/**\r\n\t * Register a router to handle a specific path\r\n\t * @param {string} path Path to handle\r\n\t * @param {function} handler Handler to be triggered when the path is matched\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tregister(path, handler) {\r\n\t\tif (!handler || typeof(handler) !== 'function') {\r\n\t\t\tthrow Error(`erebus.router.invalid_handler[${path}]`);\r\n\t\t}\r\n\t\tthis.#routes.push(new Route(path, handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves a specific path\r\n\t * @param {string} path Path to serve\r\n\t * @returns Promise to be fullfilled (or rejected) after the route is served\r\n\t */\r\n\tserve(path) {\r\n\t\tif (typeof (path) === 'undefined') {\r\n\t\t\tpath = null;\r\n\t\t}\r\n\t\tpath = clearPath(path);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar effectiveRoute = getMatchingRouter(this.#routes, path);\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\teffectiveRoute = this.#defaultRouter;\r\n\t\t\t}\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\treject('erebus.route.no_matching_route_or_default');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\teffectiveRoute.handle(path).then(function () {\r\n\t\t\t\tresolve(true);\r\n\t\t\t}).catch(reject);\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to trigger the routing process based on the current path */\r\n\t#triggerRouting() {\r\n\t\t// TODO: add beforeRoute event\r\n\t\tthis.serve(window.location.hash).then(() => {\r\n\t\t\t// TODO: add afterRoute event\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.error('erebus.router.error', err);\r\n\t\t\tif (this.#onError) {\r\n\t\t\t\tthis.#onError(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Initialize the route engine to start serving requests */\r\n\tstart() {\r\n\t\tif (this.#started) {\r\n\t\t\tconsole.warn('erebus.router.already_started');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#started = true;\r\n\t\twindow.addEventListener('popstate', () => {\r\n\t\t\tthis.#triggerRouting();\r\n\t\t});\r\n\t\tthis.#triggerRouting();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior for the default route (when no other route matches the path)\r\n\t * @param {function} handler Funtion to be invoked when no other route matches the requested path or null to remove the default handler\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tdefault(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#defaultRouter = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof(handler) != 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as a default handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_default_handler');\r\n\t\t}\r\n\t\tthis.#defaultRouter = new Route('*', handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior when a route fails\r\n\t * @param {function} handler Funtion to be invoked when the routing causes an error\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\terror(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#onError = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (handler) !== 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as an error handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_error_handler');\r\n\t\t}\r\n\t\tthis.#onError = handler;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nconst router = new RouterEngine();\r\nexport default router;","'use strict';\r\nconsole.log('Erebus Core v0.0.13');\r\n\r\nimport utils from './utils.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport element from './element.mjs';\r\nimport http from './http.mjs';\r\nimport i18n from './i18n.mjs';\r\nimport router from './router.mjs';\r\n\r\nexport default { utils, cookies, random, events, handler, element, http, i18n, router };\r\n"],"names":["$module","value","Promise","_typeof","then","replace","tinyId","Math","random","toString","substring","$module$2","set","name","timespan","Error","expireDate","Date","setTime","getTime","cookie","utils","trim","toGMTString","document","get","cookiestring","RegExp","exec","decodeURIComponent","shortId","guid","$module$1","documentReady","readyState","resolve","addEventListener","attachEvent","console","error","reject","animate","target","animationClass","capture","once","className","classList","add","addClass","handler","trigger","fnc","_len","arguments","length","params","Array","_key","call","apply","concat","ex","triggerAsPromise","_len2","_key2","$scope","executeRequest","method","url","options","request","window","XMLHttpRequest","ActiveXObject","createXmlHttp","onreadystatechange","status","err","response","responseText","headers","rawHeaders","getAllResponseHeaders","split","idx","parts","headerName","toLowerCase","headerValue","getResponseHeaders","parser","parsers","getResponseParser","interceptor","result","undefined","open","async","setRequestHeader","setRequestHeaders","data","send","$scope$2","JSON","parse","cause","post","put","loadScript","element","createElement","src","type","onerror","onload","head","appendChild","parseHTML","content","holder","innerHTML","_toConsumableArray","childNodes","removeAllChild","HTMLElement","firstChild","removeChild","cloneHTMLElement","sourceElement","clonedElement","cloneNode","nodeType","removeAttribute","createErebusElement","source","ErebusElement","body","nativeSource","startsWith","endsWith","getElementById","querySelectorAll","_wrappedElements","WeakMap","_hidden","_classCallCheck","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","this","_classPrivateFieldGet","push","NodeList","from","isArray","_createClass","key","wdx","each","index","setParentNode","clone","parent","parentNode","parsedContent","innerElement","eventName","listener","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","clonedWrapped","classes","cdx","test","regex","_this","http","errorId","getLocale","navigator","language","browserLanguage","getSystemLanguage","substr","getLanguage","resources","i18n","setLanguage","setResourceBundle","resource","langCode","isPromise","Object","assign","getLabel","defaultValue","clearPath","path","_path","_handler","Route","routingPath","targetPath","routingParts","targetParts","compareStringPaths","parameters","extractPathParameters","_routes","_started","_defaultRouter","_onError","_triggerRouting","WeakSet","RouterEngine","_this2","effectiveRoute","routeList","rdx","route","match","getMatchingRouter","handle","_this3","warn","_classPrivateMethodGet","_triggerRouting2","_this4","serve","location","hash","router","log","cookies","events"],"mappings":"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"}